name: "Commit and Push to Protected Branch"
description: "A Github Action that is able to push the pending changes of a codebase on a branch protected by pull request."
author: "mail@fabriziocacicia.com"

inputs:
  git_user_name:
    description: 'The name of the git user of the commit (default: Commit and Push to Protected Branch Action)'
    required: false
    default: 'Commit and Push to Protected Branch Action'
  git_user_email:
    description: 'The email of the git user of the commit (default: <>)'
    required: false
    default: '<>'
  temp_branch_prefix:
    description: 'The prefix of the temporary branch. The complete name will be prefix_runid-runattempt: i.e. branchprefix_4269555185-1 (default: temp)'
    required: false
    default: 'temp'
  commit_message:
    description: 'The message of the commit that will hold the changes'
    required: true

runs:
  using: "composite"
  steps:
    - name: Config git user
      shell: bash
      run: |
        git config user.name "${{ inputs.git_user_name }}"
        git config user.email "${{ inputs.git_user_email }}"
    - name: Build temporary branch name
      id: temp_branch
      shell: bash
      run: |
        TEMP_BRANCH_PREFIX="${{ inputs.temp_branch_prefix }}_${{ github.run_id }}-${{ github.run_attempt }}"
        echo "::set-output name=value::$base_branch"
        echo "value=$TEMP_BRANCH_PREFIX" >> $GITHUB_OUTPUT
    - name: Commit and push the changes to a temporary branch
      shell: bash
      run: |
        git checkout -b ${{ steps.temp_branch.outputs.value }}
        git add --all
        git commit -m "${{ inputs.commit_message }}"
        git push -u origin ${{ steps.temp_branch.outputs.value }}
    - name: Push changes to the branch that triggered the workflow (even if its protected)
      shell: bash
      run: |
        gh pr create --base ${{ github.ref_name }} --head ${{ steps.temp_branch.outputs.value }} --title "${{ inputs.commit_message }}" --body "This Pull Request has been created by the **Push to Pull Request protected branch** Github Action"
        gh pr merge --auto --delete-branch --squash
